require('dotenv').config();

const express = require('express');
const app = express();
app.get('/', (req, res) => res.send('‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç'));
app.listen(3000, () => console.log('üåê Express —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000'));

const {
  Client,
  GatewayIntentBits,
  Partials,
  EmbedBuilder,
  ModalBuilder,
  TextInputBuilder,
  TextInputStyle,
  ActionRowBuilder,
  ButtonBuilder,
  ButtonStyle,
  ChannelType,
  PermissionsBitField,
  InteractionType,
} = require('discord.js');

const dayjs = require('dayjs');
const relativeTime = require('dayjs/plugin/relativeTime');
dayjs.extend(relativeTime);

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent,
    GatewayIntentBits.GuildVoiceStates,
  ],
  partials: [Partials.Channel],
});

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
const CATEGORY_ID = process.env.CATEGORY_ID;
const ROLES_ACCESS_IDS = process.env.ROLES_ACCESS_IDS.split(',');  // –†–∞–∑–¥–µ–ª—è–µ–º —Ä–æ–ª–∏ –ø–æ –∑–∞–ø—è—Ç–æ–π
const CHANNEL_ACCEPT_ID = process.env.CHANNEL_ACCEPT_ID;
const CHANNEL_DECLINE_ID = process.env.CHANNEL_DECLINE_ID;
const CHANNEL_LOG_ID = process.env.CHANNEL_LOG_ID;
const INVITE_CHANNEL_ID = process.env.INVITE_CHANNEL_ID;
const VOICE_CATEGORY_ID = process.env.VOICE_CATEGORY_ID;

// –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –∑–∞—è–≤–∫–∏
function createStatusNotificationEmbed(status, applicationName, channelName = '', guildId, applicationLink = '') {
  let color;
  let title = '';
  let description = '';

  const timeAgo = dayjs().fromNow();

  switch (status.toLowerCase()) {
    case '—Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ':
      color = 0xf1c40f; // –∂—ë–ª—Ç—ã–π
      title = '–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏';
      description = `–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤ **${applicationName}** –≤–∑—è—Ç–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!`;
      break;
    case '–æ–±–∑–≤–æ–Ω':
      color = 0x3498db; // —Å–∏–Ω–∏–π
      title = '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –æ–±–∑–≤–æ–Ω';
      description = `–í—ã –±—ã–ª–∏ –≤—ã–∑–≤–∞–Ω—ã –Ω–∞ –æ–±–∑–≤–æ–Ω!`;
      break;
    case '–ø—Ä–∏–Ω—è—Ç–æ':
      color = 0x2ecc71; // –∑–µ–ª—ë–Ω—ã–π
      title = '–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞';
      description = `–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤ **${applicationName}** —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞!`;
      break;
    case '–æ—Ç–∫–ª–æ–Ω–µ–Ω–æ':
      color = 0xe74c3c; // –∫—Ä–∞—Å–Ω—ã–π
      title = '–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞';
      description = `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤ **${applicationName}** –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.`;
      break;
    default:
      color = 0x2f3136; // —Å–µ—Ä—ã–π
      title = '–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –æ–±–Ω–æ–≤–ª—ë–Ω';
      description = `–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ **${applicationName}** –∏–∑–º–µ–Ω—ë–Ω.`;
  }

  return new EmbedBuilder()
    .setColor(color)
    .setTitle(title)
    .setDescription(description)
    .setTimestamp();
}

// –≠—Ç–æ—Ç –±–ª–æ–∫ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è, –∫–æ–≥–¥–∞ –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ
client.once('ready', async () => {
  console.log(`‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ ${client.user.tag}`);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π —Å –∫–Ω–æ–ø–∫–∞–º–∏
client.on('interactionCreate', async (interaction) => {
  if (interaction.isButton()) {
    const targetUserId = interaction.customId.split(':')[1];
    const user = await interaction.guild.members.fetch(targetUserId).catch(() => null);
    const moderator = interaction.user;
    const guild = interaction.guild;

    if (!user) return interaction.reply({ content: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω', flags: 64 });

    if (interaction.customId.startsWith('accept_app:')) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü—Ä–∏–Ω—è—Ç—å"
      const embed = createStatusNotificationEmbed('–ø—Ä–∏–Ω—è—Ç–æ', 'G A R C I A', '', guild.id);

      await user.send({ embeds: [embed] }).catch(() => {});

      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ invite-logs
      const logChannel = await client.channels.fetch(CHANNEL_LOG_ID);
      await logChannel.send(`${moderator} –ø—Ä–∏–Ω—è–ª –∑–∞—è–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <@${targetUserId}>`);

      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –ø—Ä–∏–Ω—è—Ç–∏—è
      const acceptChannel = await client.channels.fetch(CHANNEL_ACCEPT_ID);
      await acceptChannel.send(`–ó–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <@${targetUserId}> –ø—Ä–∏–Ω—è—Ç–∞!`);

      await interaction.reply({ content: '‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–∏–Ω—è—Ç–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.', flags: 64 });
    }

    if (interaction.customId.startsWith('decline_app:')) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û—Ç–∫–ª–æ–Ω–∏—Ç—å"
      const embed = createStatusNotificationEmbed('–æ—Ç–∫–ª–æ–Ω–µ–Ω–æ', 'G A R C I A', '', guild.id);

      await user.send({ embeds: [embed] }).catch(() => {});

      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ invite-logs
      const logChannel = await client.channels.fetch(CHANNEL_LOG_ID);
      await logChannel.send(`${moderator} –æ—Ç–∫–ª–æ–Ω–∏–ª –∑–∞—è–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <@${targetUserId}>`);

      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π
      const declineChannel = await client.channels.fetch(CHANNEL_DECLINE_ID);
      await declineChannel.send(`–ó–∞—è–≤–∫–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <@${targetUserId}> –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞!`);

      await interaction.reply({ content: '‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.', flags: 64 });
    }

    if (interaction.customId.startsWith('review_app:')) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ"
      const embed = createStatusNotificationEmbed('—Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ', 'G A R C I A', '', guild.id);
      await interaction.reply({ content: `–ó–∞—è–≤–∫–∞ –≤–∑—è—Ç–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º ${moderator}`, flags: 64 });

      // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ invite-logs
      const logChannel = await client.channels.fetch(CHANNEL_LOG_ID);
      await logChannel.send(`${moderator} –≤–∑—è–ª –∑–∞—è–≤–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <@${targetUserId}> –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.`);

      // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å–æ–∑–¥–∞—Ç–µ–ª—é –∑–∞—è–≤–∫–∏
      await user.send({
        content: `–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ —É –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞ ${moderator}.`
      }).catch(() => {
        interaction.followUp({ content: '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.' });
      });
    }

    if (interaction.customId.startsWith('call_app:')) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û–±–∑–≤–æ–Ω"
      const voiceCategory = await guild.channels.fetch(VOICE_CATEGORY_ID);
      const voiceChannels = voiceCategory.children.cache;

      // –°–ø–∏—Å–æ–∫ –∑–∞—Ä–∞–Ω–µ–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –ø–æ –∏—Ö ID
      const selectedChannels = [
        '1203029383871463444', // –ü–µ—Ä–≤—ã–π –∫–∞–Ω–∞–ª
        '1327303833491345419', // –í—Ç–æ—Ä–æ–π –∫–∞–Ω–∞–ª
        '1386828355499851806'  // –¢—Ä–µ—Ç–∏–π –∫–∞–Ω–∞–ª
      ];

      // –§–∏–ª—å—Ç—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞–Ω–∞–ª—ã, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ
      const availableChannels = selectedChannels
        .map(id => voiceChannels.get(id))  // –ò—Å–ø–æ–ª—å–∑—É–µ–º get –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞ –ø–æ ID
        .filter(channel => channel !== undefined);  // –§–∏–ª—å—Ç—Ä—É–µ–º undefined –∑–Ω–∞—á–µ–Ω–∏—è

      if (availableChannels.length === 0) {
        console.log('–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã.');
        return interaction.reply({ content: '–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –≥–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã.', flags: 64 });
      }

      const randomChannel = availableChannels[Math.floor(Math.random() * availableChannels.length)];
      console.log('–í—ã–±—Ä–∞–Ω –∫–∞–Ω–∞–ª –¥–ª—è –æ–±–∑–≤–æ–Ω–∞:', randomChannel.name);

      await interaction.reply({
        content: `${user} –±—ã–ª –≤—ã–∑–≤–∞–Ω –Ω–∞ –æ–±–∑–≤–æ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º ${moderator} –≤ –∫–∞–Ω–∞–ª ${randomChannel.name}. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ [—Å—Å—ã–ª–∫–µ](${randomChannel.url}) –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.`,
        flags: 64,
      });

      try {
        await user.send({
          content: `–í—ã –±—ã–ª–∏ –≤—ã–∑–≤–∞–Ω—ã –Ω–∞ –æ–±–∑–≤–æ–Ω –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º ${moderator} –≤ –∫–∞–Ω–∞–ª ${randomChannel.name}. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ [—Å—Å—ã–ª–∫–µ](${randomChannel.url}) –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.`
        });
      } catch (error) {
        console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ª–∏—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
      }
    }
  }
});

client.login(process.env.TOKEN);
