require('dotenv').config();

const express = require('express');
const app = express();
app.get('/', (req, res) => res.send('‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç'));
app.listen(3000, () => console.log('üåê Express —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 3000'));

const {
  Client,
  GatewayIntentBits,
  Partials,
  EmbedBuilder,
  ModalBuilder,
  TextInputBuilder,
  TextInputStyle,
  ActionRowBuilder,
  ButtonBuilder,
  ButtonStyle,
  ChannelType,
  PermissionsBitField,
  InteractionType,
  StringSelectMenuBuilder
} = require('discord.js');

const dayjs = require('dayjs');
const relativeTime = require('dayjs/plugin/relativeTime');
dayjs.extend(relativeTime);

const client = new Client({
  intents: [
    GatewayIntentBits.Guilds,
    GatewayIntentBits.GuildMessages,
    GatewayIntentBits.MessageContent
  ],
  partials: [Partials.Channel]
});

const CATEGORY_ID = '1200037290538451095';
const ROLES_ACCESS_IDS = [
  '1388191362922582047', // High PR
  '1388191362922582048'  // PR
];
const CHANNEL_ACCEPT_ID = '1386830144789942272';
const CHANNEL_DECLINE_ID = '1386830559136714825';
const CHANNEL_LOG_ID = '1304923881294925876';
const INVITE_CHANNEL_ID = '1387148896320487564';

// --- –î–æ–±–∞–≤–ª–µ–Ω–∞ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è embed —Å —Ü–≤–µ—Ç–æ–º –∏ —Ç–µ–∫—Å—Ç–æ–º –ø–æ —Å—Ç–∞—Ç—É—Å—É ---
function createStatusNotificationEmbed(status, applicationName, channelName = '', guildId, applicationLink = '') {
  let color;
  let title = '';
  let description = '';
  
  const timeAgo = dayjs().fromNow(); // –ü—Ä–∏–º–µ—Ä: "17 hours ago"
  
  switch (status.toLowerCase()) {
    case '—Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ':
      color = 0xf1c40f; // –∂—ë–ª—Ç—ã–π
      title = '–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ –∑–∞—è–≤–∫–∏';
      description = `–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤ **${applicationName}** –≤–∑—è—Ç–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ!\n\n` +
                    `–°—Å—ã–ª–∫–∞ –Ω–∞ –∑–∞—è–≤–∫—É: ${applicationLink || '‚Å†' + applicationName + '‚Å†unknown'}\n` +
                    `ID –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä–∞: ${guildId}\n` +
                    `–î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è: ${timeAgo}`;
      break;
    case '–æ–±–∑–≤–æ–Ω':
      color = 0x3498db; // —Å–∏–Ω–∏–π
      title = '–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –æ–±–∑–≤–æ–Ω';
      description = `–í—ã –±—ã–ª–∏ –≤—ã–∑–≤–∞–Ω—ã –Ω–∞ –æ–±–∑–≤–æ–Ω!\n\n` +
                    `–í–∞—Å –ø—Ä–∏–≥–ª–∞—à–∞—é—Ç –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É: **${applicationName}** ${channelName}\n` +
                    `ID –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä–∞: ${guildId}\n` +
                    `–î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è: ${timeAgo}`;
      break;
    case '–ø—Ä–∏–Ω—è—Ç–æ':
      color = 0x2ecc71; // –∑–µ–ª—ë–Ω—ã–π
      title = '–ó–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞';
      description = `–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤ **${applicationName}** —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è—Ç–∞!\n\n` +
                    `ID –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä–∞: ${guildId}\n` +
                    `–î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è: ${timeAgo}`;
      break;
    case '–æ—Ç–∫–ª–æ–Ω–µ–Ω–æ':
      color = 0xe74c3c; // –∫—Ä–∞—Å–Ω—ã–π
      title = '–ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞';
      description = `–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –≤ **${applicationName}** –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n\n` +
                    `ID –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä–∞: ${guildId}\n` +
                    `–î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è: ${timeAgo}`;
      break;
    default:
      color = 0x2f3136; // —Å–µ—Ä—ã–π
      title = '–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –æ–±–Ω–æ–≤–ª—ë–Ω';
      description = `–°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ **${applicationName}** –∏–∑–º–µ–Ω—ë–Ω.\n\n` +
                    `ID –î–∏—Å–∫–æ—Ä–¥ —Å–µ—Ä–≤–µ—Ä–∞: ${guildId}\n` +
                    `–î–∞—Ç–∞ —Å–æ–±—ã—Ç–∏—è: ${timeAgo}`;
  }

  return new EmbedBuilder()
    .setColor(color)
    .setTitle(title)
    .setDescription(description)
    .setTimestamp();
}

client.once('ready', async () => {
  console.log(`‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ ${client.user.tag}`);

  const inviteChannel = await client.channels.fetch(INVITE_CHANNEL_ID);
  if (!inviteChannel || !inviteChannel.isTextBased()) return;

  const messages = await inviteChannel.messages.fetch({ limit: 10 });
  const botMessage = messages.find(m => m.author.id === client.user.id);
  if (botMessage) await botMessage.delete().catch(() => {});

  const embed = new EmbedBuilder()
    .setTitle('üìã –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É')
    .setDescription(
      '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É.\n\n' +
      '**–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?**\n' +
      '1. –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É **–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É**.\n' +
      '2. –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è —Ñ–æ—Ä–º—ã.\n' +
      '3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ä–º—É, –∏ –º—ã —Ä–∞—Å—Å–º–æ—Ç—Ä–∏–º –≤–∞—à—É –∑–∞—è–≤–∫—É –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.'
    )
    .setImage('https://media.discordapp.net/attachments/1300952767078203493/1388174214187581582/ezgif-61741d6e62f365.gif')
    .setColor(0x2f3136);

  const button = new ButtonBuilder()
    .setCustomId('open_modal')
    .setLabel('–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')
    .setStyle(ButtonStyle.Primary);

  const row = new ActionRowBuilder().addComponents(button);
  await inviteChannel.send({ embeds: [embed], components: [row] });
});

client.on('interactionCreate', async (interaction) => {
  if (interaction.isButton() && interaction.customId === 'open_modal') {
    const modal = new ModalBuilder().setCustomId('application_modal').setTitle('üìù –ó–∞—è–≤–∫–∞ –≤ —Å–µ–º—å—é');
    const fields = [
      { id: 'nickname_stat', label: '–ù–∏–∫–Ω–µ–π–º | —Å—Ç–∞—Ç–∏–∫', style: TextInputStyle.Short, placeholder: 'Sky Garcia | 100000' },
      { id: 'irl_name_age', label: 'IRL –ò–º—è | –≤–æ–∑—Ä–∞—Å—Ç', style: TextInputStyle.Short, placeholder: '–¢–∏–º–∞ | 20' },
      { id: 'family_history', label: '–í –∫–∞–∫–∏—Ö —Å–µ–º—å—è—Ö —Å–æ—Å—Ç–æ—è–ª–∏ —Ä–∞–Ω–µ–µ?', style: TextInputStyle.Paragraph, placeholder: '–£–∫–∞–∂–∏—Ç–µ, –µ—Å–ª–∏ –±—ã–ª–∏ –≤ –¥—Ä—É–≥–∏—Ö —Å–µ–º—å—è—Ö' },
      { id: 'servers', label: '–ù–∞ –∫–∞–∫–∏—Ö —Å–µ—Ä–≤–µ—Ä–∞—Ö –≤–∫–∞—á–∞–Ω—ã –ø–µ—Ä—Å–æ–Ω–∞–∂–∏?', style: TextInputStyle.Short, placeholder: '06, 11, 15' },
      { id: 'recoil_links', label: '–û—Ç–∫–∞—Ç—ã —Å—Ç—Ä–µ–ª—å–±—ã (YouTube / Rutube)', style: TextInputStyle.Paragraph, placeholder: 'https://youtube.com/...' }
    ];
    modal.addComponents(
      ...fields.map(f =>
        new ActionRowBuilder().addComponents(
          new TextInputBuilder()
            .setCustomId(f.id)
            .setLabel(f.label)
            .setStyle(f.style)
            .setPlaceholder(f.placeholder)
            .setRequired(true)
        )
      )
    );
    return interaction.showModal(modal);
  }

  if (interaction.type === InteractionType.ModalSubmit && interaction.customId === 'application_modal') {
  console.log('üì• –û–±—Ä–∞–±–æ—Ç–∫–∞ ModalSubmit –Ω–∞—á–∞–ª–∞—Å—å');

  try {
    await interaction.deferReply({ ephemeral: true });

    const user = interaction.user;
    const guild = interaction.guild;

    if (!guild) {
      console.error('‚ùå Guild –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ ModalSubmit');
      return interaction.editReply({ content: '‚ùå –û—à–∏–±–∫–∞: –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.', ephemeral: true });
    }

    const nicknameStat = interaction.fields.getTextInputValue('nickname_stat');
    const irl = interaction.fields.getTextInputValue('irl_name_age');
    const history = interaction.fields.getTextInputValue('family_history');
    const servers = interaction.fields.getTextInputValue('servers');
    const recoil = interaction.fields.getTextInputValue('recoil_links');

    let channelName = `–∑–∞—è–≤–∫–∞-${user.username.toLowerCase()}`;
    channelName = channelName.replace(/[^a-z0-9\-–∞-—è]/gi, '-').replace(/-+/g, '-').slice(0, 90);

    const overwrites = [
      { id: guild.roles.everyone.id, deny: [PermissionsBitField.Flags.ViewChannel] },
      { id: user.id, allow: [PermissionsBitField.Flags.ViewChannel] },
      ...ROLES_ACCESS_IDS.map(roleId => ({ id: roleId, allow: [PermissionsBitField.Flags.ViewChannel] }))
    ];

    const channel = await guild.channels.create({
      name: channelName,
      type: ChannelType.GuildText,
      parent: CATEGORY_ID,
      permissionOverwrites: overwrites
    }).catch(err => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞–Ω–∞–ª–∞:', err);
    });

    if (!channel) {
      console.error('‚ùå –ö–∞–Ω–∞–ª –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω');
      return interaction.editReply({ content: '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫–∞–Ω–∞–ª.' });
    }

    const embed = new EmbedBuilder()
      .setTitle('üì® –ó–∞—è–≤–∫–∞')
      .addFields(
        { name: '–ù–∏–∫–Ω–µ–π–º –∏ —Å—Ç–∞—Ç–∏–∫', value: nicknameStat },
        { name: 'IRL –∏–º—è –∏ –≤–æ–∑—Ä–∞—Å—Ç', value: irl },
        { name: '–°–µ–º—å–∏ —Ä–∞–Ω–µ–µ', value: history },
        { name: '–°–µ—Ä–≤–µ—Ä–∞', value: servers },
        { name: '–û—Ç–∫–∞—Ç—ã —Å—Ç—Ä–µ–ª—å–±—ã', value: recoil },
        { name: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value: `<@${user.id}>` }
      )
      .setFooter({ text: `ID: ${user.id}` })
      .setColor(0xf1c40f)
      .setTimestamp();

    const buttons = new ActionRowBuilder().addComponents(
      new ButtonBuilder().setCustomId(`accept_app:${user.id}`).setLabel('–ü—Ä–∏–Ω—è—Ç—å').setStyle(ButtonStyle.Success),
      new ButtonBuilder().setCustomId(`review_app:${user.id}`).setLabel('–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ').setStyle(ButtonStyle.Secondary),
      new ButtonBuilder().setCustomId(`call_app:${user.id}`).setLabel('–û–±–∑–≤–æ–Ω').setStyle(ButtonStyle.Primary),
      new ButtonBuilder().setCustomId(`decline_app:${user.id}`).setLabel('–û—Ç–∫–ª–æ–Ω–∏—Ç—å').setStyle(ButtonStyle.Danger)
    );

    await channel.send({
      content: ROLES_ACCESS_IDS.map(id => `<@&${id}>`).join(' '),
      embeds: [embed],
      components: [buttons]
    }).catch(err => {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ embed –∏ –∫–Ω–æ–ø–æ–∫:', err);
    });

    await interaction.editReply({ content: `‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞: ${channel}` });
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ ModalSubmit:', err);
    if (!interaction.deferred && !interaction.replied) {
      await interaction.reply({ content: '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ.', ephemeral: true }).catch(() => {});
    } else {
      await interaction.editReply({ content: '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ.' }).catch(() => {});
    }
  }
}

  // --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–†–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ" —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ ---
  if (interaction.isButton() && interaction.customId.startsWith('review_app:')) {
    const targetUserId = interaction.customId.split(':')[1];
    const guild = interaction.guild;
    const member = await guild.members.fetch(targetUserId).catch(() => null);
    if (!member) return interaction.reply({ content: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω', ephemeral: true });

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ –∏–∑ —Ç–≤–æ–∏—Ö –¥–∞–Ω–Ω—ã—Ö, –ø–æ–∫–∞ –ø—Ä–∏–º–µ—Ä —Å –∫–æ–Ω—Å—Ç–∞–Ω—Ç–æ–π:
    const applicationName = 'G A R C I A';
    const guildId = guild.id;
    const applicationLink = ''; // –ú–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞—Ç—å —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞—è–≤–∫—É, –µ—Å–ª–∏ –µ—Å—Ç—å

    const embed = createStatusNotificationEmbed('—Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ', applicationName, '', guildId, applicationLink);

    await member.send({ embeds: [embed] }).catch(() => {});
    await interaction.reply({ content: '‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.', ephemeral: true });
  }

  // --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–û–±–∑–≤–æ–Ω" —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ ---
  if (interaction.isButton() && interaction.customId.startsWith('call_app:')) {
    const targetUserId = interaction.customId.split(':')[1];
    const guild = interaction.guild;
    const member = await guild.members.fetch(targetUserId).catch(() => null);
    if (!member) return interaction.reply({ content: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω', ephemeral: true });

    const applicationName = 'G A R C I A';
    const channelName = '‚òéÔ∏è„Éª–û–±–∑–≤–æ–Ω #2';
    const guildId = guild.id;

    const embed = createStatusNotificationEmbed('–æ–±–∑–≤–æ–Ω', applicationName, channelName, guildId);

    await member.send({ embeds: [embed] }).catch(() => {});
    await interaction.reply({ content: '‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–±–∑–≤–æ–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.', ephemeral: true });
  }

  // –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ (–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ, –æ–±–∑–≤–æ–Ω —Å —Å–µ–ª–µ–∫—Ç–æ–º –∏ —Ç.–ø.) –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
  if (interaction.isButton() && interaction.customId.includes('decline_app')) {
    const [action, targetUserId] = interaction.customId.split(':');
    const modal = new ModalBuilder()
      .setCustomId(`decline_modal:${targetUserId}`)
      .setTitle('–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–∞–∑–∞');

    const reasonInput = new TextInputBuilder()
      .setCustomId('decline_reason')
      .setLabel('–£–∫–∞–∂–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–∞–∑–∞')
      .setStyle(TextInputStyle.Paragraph)
      .setRequired(true)
      .setPlaceholder('–ù–∞–ø—Ä–∏–º–µ—Ä: –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –æ–ø—ã—Ç–∞, —Å–ª–∞–±—ã–µ –æ—Ç–∫–∞—Ç—ã –∏ —Ç.–¥.');

    const modalRow = new ActionRowBuilder().addComponents(reasonInput);
    modal.addComponents(modalRow);

    return interaction.showModal(modal);
  }

  if (interaction.type === InteractionType.ModalSubmit && interaction.customId.startsWith('decline_modal:')) {
    const targetUserId = interaction.customId.split(':')[1];
    const reason = interaction.fields.getTextInputValue('decline_reason');
    const guild = interaction.guild;
    const member = await guild.members.fetch(targetUserId).catch(() => null);
    const logChannel = await guild.channels.fetch(CHANNEL_LOG_ID).catch(() => null);
    const targetChannel = await guild.channels.fetch(CHANNEL_DECLINE_ID).catch(() => null);
    const appChannel = interaction.channel;
    const embedToSend = interaction.message?.embeds?.[0];

    if (!member || !embedToSend) {
      return interaction.reply({ content: '‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª–æ–Ω–∏—Ç—å –∑–∞—è–≤–∫—É.', ephemeral: true });
    }

    const embedWithReason = EmbedBuilder.from(embedToSend)
      .addFields({ name: '‚ùå –ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–∞–∑–∞', value: reason });

    if (targetChannel?.isTextBased()) {
      await targetChannel.send({
        content: `‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç <@${targetUserId}> –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.`,
        embeds: [embedWithReason]
      });
    }

    await logChannel?.send({
      embeds: [new EmbedBuilder()
        .setTitle('‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞')
        .setDescription(`–ó–∞—è–≤–∫–∞ –æ—Ç <@${targetUserId}> –±—ã–ª–∞ **–æ—Ç–∫–ª–æ–Ω–µ–Ω–∞** –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º <@${interaction.user.id}>.`)
        .addFields({ name: '–ü—Ä–∏—á–∏–Ω–∞', value: reason })
        .setColor('Red')
        .setTimestamp()]
    });

    await member.send({
      embeds: [new EmbedBuilder()
        .setTitle('‚ùå –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞')
        .setDescription(`–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n**–ü—Ä–∏—á–∏–Ω–∞:** ${reason}`)
        .setColor('Red')]
    }).catch(() => {});

    await interaction.reply({ content: '‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –ø—Ä–∏—á–∏–Ω—ã.', ephemeral: true });
    setTimeout(() => appChannel.delete().catch(() => {}), 1000);
  }

  if (interaction.isStringSelectMenu()) {
    const [action, targetUserId] = interaction.customId.split(':');
    if (action !== 'call_select') return;

    const selectedChannel = interaction.guild.channels.cache.get(interaction.values[0]);
    const member = await interaction.guild.members.fetch(targetUserId).catch(() => null);
    if (!selectedChannel || !member) return;

    await interaction.channel.send(`üìû <@${targetUserId}> –≤—ã–∑–≤–∞–Ω –Ω–∞ **–æ–±–∑–≤–æ–Ω** –≤ –∫–∞–Ω–∞–ª ${selectedChannel} –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º <@${interaction.user.id}>`);
    await member.send({
      embeds: [new EmbedBuilder()
        .setTitle('üìû –í—ã–∑–æ–≤ –Ω–∞ –æ–±–∑–≤–æ–Ω')
        .setDescription(`–í—ã –≤—ã–∑–≤–∞–Ω—ã –Ω–∞ **–æ–±–∑–≤–æ–Ω** –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º <@${interaction.user.id}> –≤ –∫–∞–Ω–∞–ª **${selectedChannel.name}**.`)
        .setColor('Blurple')]
    }).catch(() => {});
    await interaction.update({ content: 'üìû –û–±–∑–≤–æ–Ω –Ω–∞–∑–Ω–∞—á–µ–Ω.', components: [] });
  }
});

console.log('üîê –¢–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω');
client.login(process.env.TOKEN);
